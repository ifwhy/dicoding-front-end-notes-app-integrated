(()=>{class t extends HTMLElement{constructor(){super(),this.body=this.getAttribute("body")}connectedCallback(){this.innerHTML=`\n      <div class="card flex flex-col justify-content items-center my-5 p-4 rounded-md" style="width:265px; max-width:500px; background-color: #DDE6ED; min-height:300px; position:relative; " id="card">\n        <p class="text-base text-center font-semibold" id="card-title"></p>\n        <p class="text-left mt-2" id="card-date-time" style="font-size:12px;"></p>\n        <p class="text-sm text-justify mt-1" id="card-body">\n          ${this.body||"Isi catatan tidak tersedia"}\n        </p>\n\n        <div class="flex flex-row gap-6 justify-center mt-2 text-white" style="position:absolute; bottom: 10%;">\n          <button class="px-2 py-1 bg-red-600 rounded-md text-sm font-thin hover:bg-red-800" title="Klik untuk Menghapus Catatan Ini" id="delete">\n            <div class="flex gap-2 justify-center items-center">\n              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-trash-2"><path d="M3 6h18"/><path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"/><path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"/><line x1="10" x2="10" y1="11" y2="17"/><line x1="14" x2="14" y1="11" y2="17"/></svg>\n              <p>Hapus</p>\n            </div>\n          </button>\n          <button class="px-2 py-1 bg-blue-600 rounded-md text-sm font-thin hover:bg-blue-800" id="change"></button>\n        </div>\n      </div>\n    `,this.querySelector("#card-title").innerText=this.getAttribute("title");const t=this.getAttribute("date-time"),e=new Date(t);if(isNaN(e.getTime()))this.querySelector("#card-date-time").innerText="Tanggal tidak valid";else{const t=e.toLocaleDateString("id-ID",{year:"numeric",month:"long",day:"numeric"}),i=e.toLocaleTimeString("id-ID",{hour:"2-digit",minute:"2-digit"});this.querySelector("#card-date-time").innerText=`${t} pukul ${i}`}this.querySelector("#card").setAttribute("title",`Catatan ${this.getAttribute("title")}`),this.querySelector("#card-body").innerText=this.getAttribute("body")||"Isi catatan tidak tersedia";const i=this.querySelector("#change");"true"===this.getAttribute("archived")?(i.innerHTML='\n        <div class="flex gap-2 justify-center items-center">\n          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-book-up"><path d="M12 13V7"/><path d="M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"/><path d="m9 10 3-3 3 3"/></svg>\n          <p>Aktifkan</p>\n        </div>\n      ',i.title="Klik untuk Mengaktifkan Catatan Ini"):(i.innerHTML='\n        <div class="flex gap-2 justify-center items-center">\n          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-archive"><rect width="20" height="5" x="2" y="3" rx="1"/><path d="M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8"/><path d="M10 12h4"/></svg>\n          <p>Arsipkan</p>\n        </div>\n      ',i.title="Klik untuk Mengarsipkan Catatan Ini"),i.addEventListener("click",(()=>{"true"===this.getAttribute("archived")?(this.unarchiveNote(),this.setAttribute("archived","false")):(this.archiveNote(),this.setAttribute("archived","true"))})),this.querySelector("#delete").addEventListener("click",(()=>{this.deleteNote()}))}static get observedAttributes(){return["title","date-time","body","archived"]}archiveNote(){const t=this.getAttribute("data-id");(async()=>{const e=await fetch(`${API_URL}/notes/${t}/archive`,{method:"POST"}),i=await e.json();"success"===i.status?(renderUnarchivedNotes(),renderArchivedNotes()):Swal.fire({icon:"Kesalahan!",title:"Oops...",text:"Terjadi kesalahan saat mengarsipkan catatan : "+i.message})})(),this.connectedCallback()}unarchiveNote(){const t=this.getAttribute("data-id");(async()=>{const e=await fetch(`${API_URL}/notes/${t}/unarchive`,{method:"POST"}),i=await e.json();"success"===i.status?(renderUnarchivedNotes(),renderArchivedNotes()):Swal.fire({icon:"Kesalahan!",title:"Oops...",text:"Terjadi kesalahan saat mengaktifkan catatan : "+i.message})})(),this.connectedCallback()}async removeNote(t){const e=await fetch(`${API_URL}/notes/${t}`,{method:"DELETE"});"success"===(await e.json()).status&&(renderUnarchivedNotes(),renderArchivedNotes())}deleteNote(){const t=this.getAttribute("data-id");Swal.fire({title:"Apakah Anda Yakin?",text:"Catatan yang dihapus tidak dapat dikembalikan!",icon:"warning",showCancelButton:!0,confirmButtonColor:"#DC2626",cancelButtonColor:"#2563EB",cancelButtonText:"Batal",confirmButtonText:"Ya, Hapus!"}).then((e=>{e.isConfirmed&&(this.removeNote(t),Swal.fire({title:"Catatan Terhapus!",text:"Catatan Telah Dihapus",icon:"success",confirmButtonColor:"#2563EB"}),unarchiveNote(),archiveNote())}))}}customElements.define("note-card",t);class e extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML='\n      <div class="flex flex-row justify-start items-center">\n        <img src=\'\' alt=\'\' class="w-14 sm:w-16 md:w-18">\n        <p class="text-white pl-2 font-bold text-sm sm:text-lg md:text-xl">\n          Notes App - Dicoding\n        </p>\n      </div>\n    ';const t=this.querySelector("img");t.src=this.getAttribute("src"),t.alt=this.getAttribute("alt")}static get observedAttributes(){return["src"]}}customElements.define("logo-title",e);class i extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=`\n      <a href="https://instagram.com/ifwhy._" target="_blank">${this.getAttribute("nama")}</a>\n      <p>\n        <slot>Thank You Dicoding ❤️</slot>\n      </p>\n    `}static get observedAttributes(){return["nama"]}}customElements.define("name-thanks",i)})();